//brute-force approach
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>v;
        for(int i=0;i<nums.size();i++){
            for(int j=i+1;j<nums.size();j++){
                if(nums[i]+nums[j]==target){
                    v.push_back(i);
                    v.push_back(j);
                }
            }
        }
        return v;
tc:0(n^2)
sc:0(1)

//better solution

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>ans;
     map<int,int>m;
     for(int i=0;i<nums.size();i++){
         if(m.find(target-nums[i])!=m.end()){
             ans.push_back(i);
             ans.push_back(m[target-nums[i]]);
         }
         else{
             m[nums[i]]=i;
         }
     }
     return ans;
    }
};
TC:0(LOGM)
SC:0(N)
