class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n=nums.size();
        int ans=-1;
        map<int,int>m;
        for(int i=0;i<n;i++){
            m[nums[i]]++;
        }
        for(auto it:m){
            if(it.second>(n/2)){
                ans= it.first;
            }
        }
        return ans;
    }
};

//MOORVE'S ALGORITHM
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n=nums.size();
        int count=0;
        int ele=0;
        for(int i=0;i<n;i++){
         if(count==0){
            ele=nums[i];
            count=1;
        }
        
      else  if(nums[i]==ele){
            count++;
        }else{
            count--;
        }
  
        }
        int c1=0;
        for(int i=0;i<n;i++){
            if(nums[i]==ele){
                c1++;
            }
        }

        if(c1>(n/2))
            return ele;

        }
};
